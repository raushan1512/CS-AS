Exercise 1

import turtle

wn = turtle.Screen()
wn.setup(1000,1200)  
wn.title("Handling keypresses!")    
wn.bgcolor("lightgreen")            
tess = turtle.Turtle()
def h1():
   tess.forward(30)
def h2():
   tess.left(45)
def h3():
   tess.right(45)
def h4():
    wn.bye()
def h5():
    tess.color("green")
def h6():
    tess.color("blue")
def h7():
    tess.color("red")
def h8():
    a = tess.width()
    tess.width(a+1)
def h9():
    a = tess.width()
    tess.width(a-1)
def h10 ():
    tess.circle(12)
wn.onkey(h1, "Up")
wn.onkey(h2, "Left")
wn.onkey(h3, "Right")
wn.onkey(h4, "q")
wn.onkey(h5, "g")
wn.onkey(h6, 'b')
wn.onkey(h7, 'r')
wn.onkey(h8, '+')
wn.onkey(h9, '-')
wn.onkey(h10, 'c')
wn.listen()
wn.mainloop()

#######################

Exercise 2

import turtle         
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()
draw_housing()
tess.penup()

tess.forward(40)
tess.left(90)
tess.forward(50)

tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")

state_num = 0
def advance_state_machine():
    global state_num
    if state_num == 0:       
        tess.forward(70)
        tess.fillcolor("orange")
        state_num = 1
    elif state_num == 1:    
        tess.forward(70)
        tess.fillcolor("red")
        state_num = 2
    else:                 
        tess.back(140)
        tess.fillcolor("green")
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)

advance_state_machine()
wn.listen()                     
wn.mainloop()



Exercise 3

import turtle           # Tess becomes a traffic light.
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess2 = turtle.Turtle()
tess3 = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

    tess2.pensize(3)
    tess3.pensize(3)


draw_housing()

tess.penup()
tess2.penup()
tess3.penup()

tess.forward(40)
tess.left(90)
tess.forward(50)
tess2.forward(40)
tess2.left(90)
tess2.forward(120)
tess3.forward(40)
tess3.left(90)
tess3.forward(190)

tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("green")
tess2.shape("circle")
tess2.shapesize(3)
tess2.fillcolor("orange")
tess3.shape("circle")
tess3.shapesize(3)
tess3.fillcolor("red")

tess.hideturtle()
tess2.hideturtle()
tess3.hideturtle()
state_num = 0
def advance_state_machine():
    global state_num
    if state_num == 0:      
        tess.showturtle()
        tess.right(90)
        tess.hideturtle()
        state_num = 1
    elif state_num == 1:    
        tess2.showturtle()
        tess2.right(90)
        tess2.hideturtle()
        state_num = 2
    else:                  
        tess3.showturtle()
        tess3.right(90)
        tess3.hideturtle()
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)
advance_state_machine()
wn.listen()
wn.mainloop()

################

Exercise 4

import turtle          
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess2 = turtle.Turtle()
tess3 = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

    tess2.pensize(3)
    tess3.pensize(3)


draw_housing()

tess.penup()
tess2.penup()
tess3.penup()

tess.forward(40)
tess.left(90)
tess.forward(50)
tess2.forward(40)
tess2.left(90)
tess2.forward(120)
tess3.forward(40)
tess3.left(90)
tess3.forward(190)

tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("black")
tess2.shape("circle")
tess2.shapesize(3)
tess2.fillcolor("black")
tess3.shape("circle")
tess3.shapesize(3)
tess3.fillcolor("black")


state_num = 0
def advance_state_machine():
    global state_num
    if state_num == 0:
        tess3.fillcolor("black")
        tess.fillcolor("green")
        tess.right(90)
        state_num = 1
    elif state_num == 1:
        tess.fillcolor("black")
        tess2.fillcolor("orange")
        state_num = 2
    else:                  
        tess2.fillcolor("black")
        tess3.fillcolor("red")
        tess3.right(90)
        state_num = 0
    wn.ontimer(advance_state_machine, 1000)
advance_state_machine()
wn.listen()
wn.mainloop()

#####################

# 5

import turtle          
wn = turtle.Screen()
wn.setup(400,500)
wn.title("Tess becomes a traffic light!")
wn.bgcolor("lightgreen")
tess = turtle.Turtle()
tess2 = turtle.Turtle()
tess3 = turtle.Turtle()

def draw_housing():
    """ Draw a nice housing to hold the traffic lights """
    tess.pensize(3)
    tess.color("black", "darkgrey")
    tess.begin_fill()
    tess.forward(80)
    tess.left(90)
    tess.forward(200)
    tess.circle(40, 180)
    tess.forward(200)
    tess.left(90)
    tess.end_fill()

    tess2.pensize(3)
    tess3.pensize(3)


draw_housing()

tess.penup()
tess2.penup()
tess3.penup()

tess.forward(40)
tess.left(90)
tess.forward(50)
tess2.forward(40)
tess2.left(90)
tess2.forward(120)
tess3.forward(40)
tess3.left(90)
tess3.forward(190)

tess.shape("circle")
tess.shapesize(3)
tess.fillcolor("black")
tess2.shape("circle")
tess2.shapesize(3)
tess2.fillcolor("black")
tess3.shape("circle")
tess3.shapesize(3)
tess3.fillcolor("black")

state_num = 0
def advance_state_machine():
    global state_num

    if state_num == 0:
        tess3.fillcolor("black")
        tess.fillcolor("green")
        state_num = 1

    elif state_num == 1:
        tess.fillcolor("green")
        tess2.fillcolor("orange")
        state_num = 2

    elif state_num == 2:
        tess.fillcolor("black")
        state_num = 3

    else:                    # Transition from state 2 to state 0
        tess2.fillcolor("black")
        tess3.fillcolor("red")
        state_num = 0

    if state_num == 0:
        wn.ontimer(advance_state_machine, 2000)

    if state_num == 1:
        wn.ontimer(advance_state_machine, 3000)

    if state_num == 2:
        wn.ontimer(advance_state_machine, 1000)

    if state_num == 3:
        wn.ontimer(advance_state_machine, 1000)

advance_state_machine()
wn.listen()
wn.mainloop()


###################


# 6

print("                                 (0,0)                              ")
print("                         (0,15)         (15,0)                          ")
print("                  (0,30)        (15,15)         (30,0)                           ")
print("          (0,40)        (15,30)         (30,15)        (40,0)                             ")
print("  (A WIN)       (15,40)         (30,30)         (40,15)       (B WIN)                      ")
print("         (A WIN)        (30,40)         (40,30)        (B WIN)                            ")
print("                (A WIN)         (40,40)         (B WIN)                          ")
print("                        (AD A)     ^     (AD B)                                               ")
print("                (A WIN)          DEUCE          (B WIN)                ")
