EXERCISE 1

y, g, 9, Myst, True, True, True, Error, Error


EXERCISE 2

prefixes = ['J','L','B','Kn','Qu','P','Sn','T']
suffix = "ack"

for letter in prefixes:
    print(letter + suffix)


EXERCISE 3

def countletters(word,letter):
    count = 0
    for i in word:
        if i == letter:
            count += 1
    return count


EXERCISE 4

def count_letters(word,letter):
    return (word.find(letter))


EXERCISE 5

paragraph = "Shoot all the blue jays you want, if you can hit 'em, but remember it's a sin to kill a mockingbird." That was the only time I ever heard Atticus say it was a sin to do something, and I asked Miss Maudie about it."
paragraph = paragraph.lower()
paragraph2 = ''
alphabet = 'abcdefghijklmnopqrstuvwxyz '
for i in paragraph:
    check = 0
    for j in alphabet:
        if i == j:
            check = 1

    if check == 1:
        paragraph2 += i

count1 = 0
count2 = 0
xcheck = 0
wordcheck = 0
for i in paragraph2:
    if i != ' ':
        wordcheck = 1
        if i == 'x':
            xcheck = 1
    if i == ' ':
        if wordcheck == 1:
            count1 += 1
            if xcheck == 1:
                count2 += 1
        xcheck = 0
        wordcheck = 0
        print("Your text contains" + count1 + "words, of which " + count2 + " contain an 'x'.")


EXERCISE 6

layout = "{0:>4}{1:>10}{2:>4}{3:>4}{4:>4}{5:>4}{6:>4}{7:>4}{8:>4}{9:>4}{10:>4}{11:>4}{12:>4}"

print(layout.format("no.", "1", "2", "3", "4", "5", "6","7","8","9","10",'11','12'))
print(': ____________________________________________________________________ ')
for i in range(1, 13):
    print(layout.format(str(i) + ':', i, (2*i), 3*i, 4*i, i*5, i*6, i*7, i*8, i*9, i*10,i*11,i*12))


EXERCISE 7

def getrev(string):
    string2 = ''
    for i in range(len(string)-1, -1):
        string2 += string[i]
    return string2


EXERCISE 8

def mirror(string):
    string2 = ''
    for i in range(0,len(string)):
        string2 += string[i]
    for i in range(len(string)-2,-1,-1):
        string2 += i
    return (string2)


EXERCISE 9

def remove(string,alphabet):
    string2 = ''
    for i in string:
        if i != alphabet:
            string2 += i


EXERCISE 10

def check(string):
    string2 = reversed(string)
    if string == string2:
        return True
    else:
        return False


EXERCISE 11

def sub(string,sub):
    w = len(sub)
    count = 0
    for i in range(0,len(string)):
        temp = string[i:i+w]
        if temp == sub:
            count += 1
    return(count)


EXERCISE 12

def remove(substr, BigString):
  location = BigString.find(substr)
  if location < 0:
    return BigString
  finalStr = BigString[:location] + BigString[location+len(substr):]
  return finalStr
  

EXERCISE 13

def remove(substr, BigString):
  location = BigString.find(substr)
  if location < 0:
    return BigString
  finalStr = BigString[:location] + BigString[location+len(substr):]
  return finalStr

def remove_all(substr, BigString):
  x = BigString
  while x:
    if remove(substr,x) == x:
      return remove(substr,x)
    else:
      x = remove(substr,x)

print(remove_all("iss", "Mississippi"))
